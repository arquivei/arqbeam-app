# Full list on https://golangci-lint.run/usage/linters/
version: "2"
run:
    timeout: 5m
    allow-parallel-runners: true
formatters:
    enable:
        - goimports
        - gofmt
linters:
    default: none
    enable:
        - bodyclose # Checks whether HTTP response body is closed successfully
        - copyloopvar # A linter detects places where loop variables are copied.
        - dupl # Tool for code clone detection
        - errcheck # Errcheck is a program for checking for unchecked errors in go programs. These unchecked errors can be critical bugs in some cases
        - goconst # Finds repeated strings that could be replaced by a constant
        - gocritic # The most opinionated Go source code linter
        - gocyclo # Computes and checks the cyclomatic complexity of functions
        - gosec # Inspects source code for security problems
        - govet # Vet examines Go source code and reports suspicious constructs, such as Printf calls whose arguments do not align with the format string
        - ineffassign # Detects when assignments to existing variables are not used
        - misspell # Finds commonly misspelled English words in comments
        - nakedret # Finds naked returns in functions greater than a specified function length
        - noctx # noctx finds sending http request without context.Context
        - prealloc # Finds slice declarations that could potentially be preallocated
        - rowserrcheck # checks whether Err of rows is checked successfully
        - staticcheck # Staticcheck is a go vet on steroids, applying a ton of static analysis checks
        - unconvert # Remove unnecessary type conversions
        - unparam # Reports unused function parameters
        - unused # Checks Go code for unused constants, variables, functions and types
        - whitespace # Tool for detection of leading and trailing whitespace
        - zerologlint # Detects the wrong usage of `zerolog` that a user forgets to dispatch with `Send` or `Msg`.
        # List of available linters. Calculated by using `golangci-lint help linters`
        # - asasalint # Check for pass []any as any in variadic func(...any).
        # - asciicheck # Checks that all code identifiers does not have non-ASCII symbols in the name. [fast]
        # - bidichk # Checks for dangerous unicode character sequences. [fast]
        # - canonicalheader # Canonicalheader checks whether net/http.Header uses canonical header. [auto-fix]
        # - containedctx # Containedctx is a linter that detects struct contained context.Context field.
        # - contextcheck # Check whether the function uses a non-inherited context.
        # - cyclop # Checks function and package cyclomatic complexity. [fast]
        # - decorder # Check declaration order and count of types, constants, variables and functions. [fast]
        # - depguard # Go linter that checks if package imports are in a list of acceptable packages. [fast]
        # - dogsled # Checks assignments with too many blank identifiers (e.g. x, _, _, _, := f()). [fast]
        # - dupword # Checks for duplicate words in the source code. [fast, auto-fix]
        # - durationcheck # Check for two durations multiplied together.
        # - err113 # Go linter to check the errors handling expressions. [auto-fix]
        # - errchkjson # Checks types passed to the json encoding functions. Reports unsupported types and reports occurrences where the check for the returned error can be omitted.
        # - errname # Checks that sentinel errors are prefixed with the `Err` and error types are suffixed with the `Error`.
        # - errorlint # Errorlint is a linter for that can be used to find code that will cause problems with the error wrapping scheme introduced in Go 1.13. [auto-fix]
        # - exhaustive # Check exhaustiveness of enum switch statements.
        # - exhaustruct # Checks if all structure fields are initialized.
        # - exptostd # Detects functions from golang.org/x/exp/ that can be replaced by std functions. [auto-fix]
        # - fatcontext # Detects nested contexts in loops and function literals. [auto-fix]
        # - forbidigo # Forbids identifiers.
        # - forcetypeassert # Finds forced type assertions.
        # - funcorder # Checks the order of functions, methods, and constructors. [fast]
        # - funlen # Checks for long functions. [fast]
        # - ginkgolinter # Enforces standards of using ginkgo and gomega. [auto-fix]
        # - gocheckcompilerdirectives # Checks that go compiler directive comments (//go:) are valid. [fast]
        # - gochecknoglobals # Check that no global variables exist.
        # - gochecknoinits # Checks that no init functions are present in Go code. [fast]
        # - gochecksumtype # Run exhaustiveness checks on Go "sum types".
        # - gocognit # Computes and checks the cognitive complexity of functions. [fast]
        # - gocritic # Provides diagnostics that check for bugs, performance and style issues. [auto-fix]
        # - gocyclo # Computes and checks the cyclomatic complexity of functions. [fast]
        # - godot # Check if comments end in a period. [fast, auto-fix]
        # - godox # Detects usage of FIXME, TODO and other keywords inside comments. [fast]
        # - goheader # Checks if file header matches to pattern. [fast, auto-fix]
        # - gomoddirectives # Manage the use of 'replace', 'retract', and 'excludes' directives in go.mod. [fast]
        # - gomodguard # Allow and block list linter for direct Go module dependencies. This is different from depguard where there are different block types for example version constraints and module recommendations. [fast]
        # - goprintffuncname # Checks that printf-like functions are named with `f` at the end. [fast]
        # - gosmopolitan # Report certain i18n/l10n anti-patterns in your Go codebase.
        # - grouper # Analyze expression groups. [fast]
        # - iface # Detect the incorrect use of interfaces, helping developers avoid interface pollution. [auto-fix]
        # - importas # Enforces consistent import aliases. [auto-fix]
        # - inamedparam # Reports interfaces with unnamed method parameters. [fast]
        # - interfacebloat # A linter that checks the number of methods inside an interface. [fast]
        # - intrange # Intrange is a linter to find places where for loops could make use of an integer range. [auto-fix]
        # - ireturn # Accept Interfaces, Return Concrete Types.
        # - lll # Reports long lines. [fast]
        # - loggercheck # Checks key value pairs for common logger libraries (kitlog,klog,logr,slog,zap).
        # - maintidx # Maintidx measures the maintainability index of each function. [fast]
        # - makezero # Finds slice declarations with non-zero initial length.
        # - mirror # Reports wrong mirror patterns of bytes/strings usage. [auto-fix]
        # - mnd # An analyzer to detect magic numbers. [fast]
        # - musttag # Enforce field tags in (un)marshaled structs.
        # - nestif # Reports deeply nested if statements. [fast]
        # - nilerr # Finds the code that returns nil even if it checks that the error is not nil.
        # - nilnesserr # Reports constructs that checks for err != nil, but returns a different nil value error.
        # - nilnil # Checks that there is no simultaneous return of `nil` error and an invalid value.
        # - nlreturn # Nlreturn checks for a new line before return and branch statements to increase code clarity. [fast, auto-fix]
        # - nolintlint # Reports ill-formed or insufficient nolint directives. [fast, auto-fix]
        # - nonamedreturns # Reports all named returns.
        # - nosprintfhostport # Checks for misuse of Sprintf to construct a host with port in a URL. [fast]
        # - paralleltest # Detects missing usage of t.Parallel() method in your Go test.
        # - perfsprint # Checks that fmt.Sprintf can be replaced with a faster alternative. [auto-fix]
        # - predeclared # Find code that shadows one of Go's predeclared identifiers. [fast]
        # - promlinter # Check Prometheus metrics naming via promlint. [fast]
        # - protogetter # Reports direct reads from proto message fields when getters should be used. [auto-fix]
        # - reassign # Checks that package variables are not reassigned.
        # - recvcheck # Checks for receiver type consistency.
        # - revive # Fast, configurable, extensible, flexible, and beautiful linter for Go. Drop-in replacement of golint. [auto-fix]
        # - sloglint # Ensure consistent code style when using log/slog. [auto-fix]
        # - spancheck # Checks for mistakes with OpenTelemetry/Census spans.
        # - sqlclosecheck # Checks that sql.Rows, sql.Stmt, sqlx.NamedStmt, pgx.Query are closed.
        # - tagalign # Check that struct tags are well aligned. [fast, auto-fix]
        # - tagliatelle # Checks the struct tags.
        # - testableexamples # Linter checks if examples are testable (have an expected output). [fast]
        # - testifylint # Checks usage of github.com/stretchr/testify. [auto-fix]
        # - testpackage # Linter that makes you use a separate _test package. [fast]
        # - thelper # Thelper detects tests helpers which is not start with t.Helper() method.
        # - tparallel # Tparallel detects inappropriate usage of t.Parallel() method in your Go test codes.
        # - usestdlibvars # A linter that detect the possibility to use variables/constants from the Go standard library. [fast, auto-fix]
        # - usetesting # Reports uses of functions with replacement inside the testing package. [auto-fix]
        # - varnamelen # Checks that the length of a variable's name matches its scope.
        # - wastedassign # Finds wasted assignment statements.
        # - wrapcheck # Checks that errors returned from external packages are wrapped.
        # - wsl # Add or remove empty lines. [fast, auto-fix]
